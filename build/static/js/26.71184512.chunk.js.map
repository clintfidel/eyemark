{"version":3,"sources":["modules/Dashboard/pages/Categories/components/search.jsx","modules/Dashboard/pages/Categories/components/sort.jsx","modules/Dashboard/pages/Categories/components/cards.jsx","modules/Dashboard/pages/Categories/pages/ScreenLast/index.jsx"],"names":["Search","useState","showFilter","setShowFilter","t","useTranslation","className","src","SearchIcon","alt","placeholder","onClick","Filter","MockFilter","map","f","i","type","Sort","items","Card01","image","title","description","insight","useRouteMatch","url","history","push","style","backgroundImage","budget","project","Card02","project_name","date","ProjectsIcon","href","state","status","Card03","icon","images","link","marginBottom","im","ScreenLast","useParams","cat","id","console","log","ArrowBack","goBack","MockSubCategory","s"],"mappings":"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","file":"static/js/26.71184512.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SearchIcon, Filter } from \"assets/icons(svg)\";\nimport MockFilter from \"../__mock__/filter.json\";\n\nexport default function Search() {\n  const [showFilter, setShowFilter] = useState(false);\n  const { t } = useTranslation();\n  return (\n    <div className=\"search flex items-center\">\n      <img src={SearchIcon} alt=\"search\" />\n      <input className=\"search-input\" placeholder={`${t(\"categories:Search\")}...`} />\n      <div className=\"filters flex items-center justify-between\" onClick={() => setShowFilter(!showFilter)}>\n        <img src={Filter} alt=\"filter\" />\n        <p>{t(\"categories:Filter\")}</p>\n      </div>\n      {showFilter ? (\n        <div className=\"filter-box\">\n          {MockFilter.map((f, i) => {\n            return (\n              <div key={i} className=\"flex items-center filter\">\n                <input type=\"checkbox\" className=\"mr-2\" />\n                <p>{f}</p>\n              </div>\n            );\n          })}\n          <div className=\"budget\">\n            <p>{t(\"categories:Budget\")} - NGN</p>\n            <input type=\"range\" className=\"range\" />\n            <div className=\"inputs flex items-center justify-between\">\n              <input placeholder=\"500,000\" />\n              -\n              <input placeholder=\"500,000,000\" />\n            </div>\n          </div>\n          <div className=\"buttons flex items-center justify-between\">\n            <button className=\"clear\">{t(\"categories:Clear all\")}</button>\n            <button className=\"apply\">{t(\"categories:Apply\")}</button>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\n\n/**\n * @param {[string]} items - list of sort item\n */\n\nexport default function Sort({ items = [] }) {\n  const { t } = useTranslation();\n  return (\n    <div className=\"sort flex items-center justify-between\">\n      <p className=\"t\">{t(\"categories:Sort\")}</p>\n      <div className=\"flex items-center\">\n        {items.map((t, i) => {\n          return (\n            <span className=\"flex items-center justify-between\" key={i}>\n              <p>{t}</p>\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nSort.propTypes = {\n  items: PropTypes.array.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { ProjectsIcon } from \"assets/icons(svg)\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport history from \"routes/history\";\n\n/**\n * @param {*} image\n * @param {string} title\n * @param {string} type\n * @param {string} description\n * @param {object} insight\n */\n\nfunction Card01({ image, title, description, insight, type }) {\n  const { t } = useTranslation();\n  const { url } = useRouteMatch();\n  return (\n    <div onClick={() => history.push(`/dashboard/categories/cats/${type}/1`)} className=\"cat-card cat-card-01 flex\">\n      <div className=\"image\" style={{ backgroundImage: `url(${image})` }} />\n      <div className=\"text\">\n        {title ? <p className=\"title\">{title}</p> : null}\n        <p className=\"description\">{description}</p>\n        <div className=\"insights flex items-center\">\n          <div className=\"insight\">\n            <p className=\"label\">{t(\"categories:ALLOCATED BUDGET\")}</p>\n            <p className=\"value\">{insight.budget} NGN</p>\n            <p className=\"sub-label\">{t(\"categories:BASED ON 2019 BUDGET\")}</p>\n          </div>\n          <div className=\"insight\">\n            <p className=\"label\">{t(\"categories:ACTIVE PROJECTS\")}</p>\n            <p className=\"value\">{insight.project}</p>\n            <p className=\"sub-label\">{t(\"categories:ACCROSS 36 STATES & FCT\")}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCard01.propTypes = {\n  image: PropTypes.any.isRequired,\n  title: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  insight: PropTypes.object.isRequired\n};\n\n/**\n * @param {string} project_name\n * @param {string} date\n * @param {string} description\n * @param {object} insight\n */\n\nfunction Card02({ project_name, date, description, insight }) {\n  const { t } = useTranslation();\n  return (\n    <div className=\"cat-card cat-card-02\">\n      <div className=\"top-section flex items-center\">\n        <img src={ProjectsIcon} className=\"mr-3\" alt=\"project\" />\n        <div className=\"text\">\n          <p className=\"title\">{project_name}</p>\n          <p className=\"date\">{date}</p>\n        </div>\n      </div>\n      <p className=\"description\">{description}</p>\n      <a href=\"#\" className=\"link\">\n        {t(\"categories:View Project\")}\n      </a>\n      <div className=\"insights flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <div className=\"insight\">\n            <p className=\"label\">{t(\"categories:ALLOCATED BUDGET\")}</p>\n            <p className=\"value\">{insight.budget} NGN</p>\n          </div>\n          <div className=\"insight\">\n            <p className=\"label\">{t(\"categories:STATE\")}</p>\n            <p className=\"value\">{insight.state}</p>\n          </div>\n          <div className=\"insight\">\n            <p className=\"label\">{t(\"categories:PROJECT STATUS\")}</p>\n            <p className=\"value status\">{insight.status}</p>\n          </div>\n        </div>\n        <button>Eyemark</button>\n      </div>\n    </div>\n  );\n}\n\nCard02.propTypes = {\n  project_name: PropTypes.string.isRequired,\n  date: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  insight: PropTypes.object.isRequired\n};\n\n/**\n * @param {*} icon\n * @param {string} title\n * @param {string} description\n * @param {string} link\n * @param {[*]} images\n */\n\nfunction Card03({ icon, title, description, images, link }) {\n  const { url } = useRouteMatch();\n  return (\n    <div\n      onClick={() => history.push(`${url}/${link}`)}\n      className=\"cat-card cat-card-03 flex items-start justify-between\"\n    >\n      <div className=\"text\">\n        <div className=\"flex items-center\" style={{ marginBottom: \"63px\" }}>\n          <img className=\"mr-4\" src={icon} alt={title} />\n          <p className=\"title\">{title}</p>\n        </div>\n        <p className=\"description\">{description}</p>\n      </div>\n      <div className=\"images\">\n        {images.map((im, i) => {\n          return <img src={im} key={i} alt={title} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nCard03.propTypes = {\n  icon: PropTypes.any.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  images: PropTypes.any.isRequired\n};\n\nexport { Card01, Card02, Card03 };\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./style.scss\";\nimport { useParams } from \"react-router-dom\";\nimport { Search, Sort, Card02 } from \"../../components\";\nimport { ArrowBack } from \"assets/icons(svg)\";\nimport { IconButton } from \"components\";\nimport MockSubCategory from \"../../__mock__/subcategory.json\";\n\nexport function ScreenLast({ history }) {\n  const { t } = useTranslation();\n  const { cat, id } = useParams();\n  console.log(\"category name is=>\", cat);\n  console.log(\"category id is=>\", id);\n  return (\n    <>\n      <Helmet>\n        <title>\n          Eyemark - {t(\"categories:Categories\")} ({cat})\n        </title>\n      </Helmet>\n      <div className=\"navigation flex items-center\">\n        <IconButton icon={ArrowBack} onClick={() => history.goBack()} />\n        <p className=\"ml-5\">{cat}</p>\n      </div>\n      <div className=\"screen3-categories\">\n        <Search />\n        <Sort items={[\"Name\", \"Budget\", \"GDP Share\", \"Active Projects\", \"Progress\", \"Reviews\"]} />\n        <div className=\"content\">\n          {MockSubCategory.map((s, i) => {\n            return (\n              <Card02\n                key={i}\n                project_name={s.project_name}\n                date={s.date}\n                description={s.description}\n                insight={s.insight}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ScreenLast;\n"],"sourceRoot":""}